/**
 * NOTE: Display is defined in Display.scss
 * NOTE: Algin and Justify are defined in Flex.scss
 */

$gaps: 4, 8, 16, 24, 32, 48, 64, 96 !default;

$classMap: map-merge(
  $classMap,
  (
    columns-auto: (
      grid-template-columns: repeat(auto-fit, minmax(0, 1fr))
    ),
    rows-auto: (
      grid-template-rows: auto
    ),
    flow-row: (
      grid-auto-flow: row
    ),
    flow-column: (
      grid-auto-flow: column
    )
  )
);

@for $i from 1 through $maxColumns {
  $classMap: map-merge(
    $classMap,
    (
      columns-#{$i}:
        (
          grid-template-columns: repeat($i, minmax(0, 1fr))
        ),
      rows-#{$i}:
        (
          grid-template-rows: repeat($i, 1fr)
        )
    )
  );
}

$classMap: map-merge(
  $classMap,
  (
    gap-0: (
      grid-gap: 0
    ),
    column-gap-0: (
      grid-column-gap: 0
    ),
    row-gap-0: (
      grid-row-gap: 0
    )
  )
);
@for $i from 1 through length($gaps) {
  $value: nth($gaps, $i) / $remBase * 1rem;
  $classMap: map-merge(
    $classMap,
    (
      gap-#{$i}:
        (
          grid-gap: $value
        ),
      column-gap-#{$i}:
        (
          grid-column-gap: $value
        ),
      row-gap-#{$i}:
        (
          grid-row-gap: $value
        )
    )
  );
}

$classMap: map-merge(
  $classMap,
  (
    column-span-full: (
      grid-column: #{1}/#{-1}
    ),
    row-span-full: (
      grid-row: #{1}/#{-1}
    )
  )
);
@for $i from 1 through $maxColumns {
  $classMap: map-merge(
    $classMap,
    (
      column-span-#{$i}:
        (
          grid-column: span #{$i}
        )
    )
  );
  $classMap: map-merge(
    $classMap,
    (
      row-span-#{$i}:
        (
          grid-row: span #{$i}
        )
    )
  );
}
