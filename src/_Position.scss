@each $value in static, fixed, absolute, relative, sticky {
  $classMap: map-merge(
    $classMap,
    (
      $value: (
        position: $value
      )
    )
  );
}

$classMap: map-merge(
  $classMap,
  (
    z-auto: (
      z-index: auto
    )
  )
);
@for $i from 0 through 5 {
  $value: $i * 10;
  $classMap: map-merge(
    $classMap,
    (
      z-#{$i}:
        (
          z-index: $value
        )
    )
  );
}

@each $value in 0, auto {
  $classMap: map-merge(
    $classMap,
    (
      inset-#{$value}:
        (
          top: $value,
          bottom: $value,
          left: $value,
          right: $value
        )
    )
  );

  $classMap: map-merge(
    $classMap,
    (
      inset-y-#{$value}:
        (
          top: $value,
          bottom: $value
        )
    )
  );

  $classMap: map-merge(
    $classMap,
    (
      inset-x-#{$value}:
        (
          left: $value,
          right: $value
        )
    )
  );

  @each $side in top, bottom, left, right {
    $classMap: map-merge($classMap, (#{$side}-#{$value}: (#{$side}: $value)));
  }
}

@for $denominator from 2 through 4 {
  @for $numerator from 1 through ($denominator - 1) {
    @each $side in top, bottom, left, right {
      $classMap: map-merge(
        $classMap,
        (#{$side}-#{$numerator}\/#{$denominator}: (#{$side}: $numerator / $denominator * 100%))
      );
    }
  }
}
