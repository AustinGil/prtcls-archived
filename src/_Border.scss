$classMap: map-merge(
  $classMap,
  (
    "border-0": (
      border: 0
    ),
    "border-y-0": (
      border-top: 0,
      border-bottom: 0
    ),
    "border-x-0": (
      border-left: 0,
      border-right: 0
    ),
    "border-t-0": (
      border-top: 0
    ),
    "border-b-0": (
      border-bottom: 0
    ),
    "border-l-0": (
      border-left: 0
    ),
    "border-r-0": (
      border-right: 0
    )
  )
);

@for $i from 1 through length($borderWidths) {
  $value: nth($borderWidths, $i);

  $classMap: map-merge(
    $classMap,
    (
      "border-#{$i}": (
        border: $value solid
      ),
      "border-y-#{$i}": (
        border-top: $value solid,
        border-bottom: $value solid
      ),
      "border-x-#{$i}": (
        border-left: $value solid,
        border-right: $value solid
      ),
      "border-t-#{$i}": (
        border-top: $value solid
      ),
      "border-b-#{$i}": (
        border-bottom: $value solid
      ),
      "border-l-#{$i}": (
        border-left: $value solid
      ),
      "border-r-#{$i}": (
        border-right: $value solid
      )
    )
  );
}

@each $style in solid, dashed, dotted, double, none {
  $classMap: map-merge(
    $classMap,
    (
      "border-#{$style}": (
        border: $style
      ),
      "border-y-#{$style}": (
        border-top: $style,
        border-bottom: $style
      ),
      "border-x-#{$style}": (
        border-left: $style,
        border-right: $style
      ),
      "border-t-#{$style}": (
        border-top: $style
      ),
      "border-b-#{$style}": (
        border-bottom: $style
      ),
      "border-l-#{$style}": (
        border-left: $style
      ),
      "border-r-#{$style}": (
        border-right: $style
      )
    )
  );
}

@each $key, $value in (0, 0), (full, 9999px) {
  $classMap: map-merge(
    $classMap,
    (
      "radius-#{$key}": (
        border-radius: $value
      ),
      "radius-t-#{$key}": (
        border-top-left-radius: $value,
        border-top-right-radius: $value
      ),
      "radius-b-#{$key}": (
        border-bottom-left-radius: $value,
        border-bottom-right-radius: $value
      ),
      "radius-l-#{$key}": (
        border-top-left-radius: $value,
        border-bottom-left-radius: $value
      ),
      "radius-r-#{$key}": (
        border-top-right-radius: $value,
        border-bottom-right-radius: $value
      ),
      "radius-tl-#{$key}": (
        border-top-left-radius: $value
      ),
      "radius-tr-#{$key}": (
        border-top-right-radius: $value
      ),
      "radius-bl-#{$key}": (
        border-bottom-left-radius: $value
      ),
      "radius-br-#{$key}": (
        border-bottom-right-radius: $value
      )
    )
  );
}
@for $i from 1 through length($radii) {
  $value: nth($radii, $i);

  $classMap: map-merge(
    $classMap,
    (
      "radius-#{$i}": (
        border-radius: $value
      ),
      "radius-t-#{$i}": (
        border-top-left-radius: $value,
        border-top-right-radius: $value
      ),
      "radius-b-#{$i}": (
        border-bottom-left-radius: $value,
        border-bottom-right-radius: $value
      ),
      "radius-l-#{$i}": (
        border-top-left-radius: $value,
        border-bottom-left-radius: $value
      ),
      "radius-r-#{$i}": (
        border-top-right-radius: $value,
        border-bottom-right-radius: $value
      ),
      "radius-tl-#{$i}": (
        border-top-left-radius: $value
      ),
      "radius-tr-#{$i}": (
        border-top-right-radius: $value
      ),
      "radius-bl-#{$i}": (
        border-bottom-left-radius: $value
      ),
      "radius-br-#{$i}": (
        border-bottom-right-radius: $value
      )
    )
  );
}
