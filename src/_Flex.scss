$flexDirections: row, row-reverse, column, column-reverse;
@each $value in $flexDirections {
  $classMap: map-merge(
    $classMap,
    (
      flex-#{$value}:
        (
          flex-direction: $value
        )
    )
  );
}

$flexWraps: nowrap, wrap, wrap-reverse;
@each $value in $flexWraps {
  $classMap: map-merge(
    $classMap,
    (
      flex-#{$value}:
        (
          flex-wrap: $value
        )
    )
  );
}

@each $name, $value in (baseline, baseline), (center, center), (end, flex-end), (start, flex-start),
  (stretch, stretch)
{
  $classMap: map-merge(
    $classMap,
    (
      items-#{$name}:
        (
          align-items: $value
        )
    )
  );
}

@each $name, $value in (auto, auto), (center, center), (end, flex-end), (start, flex-start),
  (stretch, stretch)
{
  $classMap: map-merge(
    $classMap,
    (
      self-#{$name}:
        (
          align-self: $value
        )
    )
  );
}

@each $name, $value in (center, center), (end, flex-end), (start, flex-start), (stretch, stretch),
  (around, space-around), (between, space-between), (evenly, space-evenly)
{
  $classMap: map-merge(
    $classMap,
    (
      content-#{$name}:
        (
          align-content: $value
        )
    )
  );
}

@each $name, $value in (center, center), (end, flex-end), (start, flex-start),
  (around, space-around), (between, space-between), (evenly, space-evenly)
{
  $classMap: map-merge(
    $classMap,
    (
      justify-#{$name}:
        (
          justify-content: $value
        )
    )
  );
}

@each $name, $value in (initial, 0 1 auto), (1, 1 1 0%), (auto, 1 1 auto), (none, none) {
  $classMap: map-merge(
    $classMap,
    (
      flex-#{$name}:
      (
        flex: $value
      )
    )
  )
}

@each $name, $value in (shrink, 1), (grow, 1) {
  $classMap: map-merge(
    $classMap,
    (
      flex-#{$name}:
      (
        flex-#{$name}: $value
      )
    )
  )
}